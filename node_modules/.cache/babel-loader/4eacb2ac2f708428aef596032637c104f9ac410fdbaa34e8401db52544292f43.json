{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahee\\\\Desktop\\\\bunkersbell\\\\cafe-menu\\\\src\\\\pages\\\\DailySummaryPage.js\",\n  _s = $RefreshSig$();\n// src/pages/DailySummaryPage.js\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DailySummaryPage() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const unsub = onSnapshot(collection(db, \"orders\"), snap => {\n      setOrders(snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      })));\n    });\n    return () => unsub();\n  }, []);\n\n  // ✅ Group by date\n  const groupedByDate = useMemo(() => {\n    const groups = {};\n    orders.filter(o => o.status === \"PaymentDone\") // only paid orders\n    .forEach(o => {\n      var _o$createdAt;\n      if (!((_o$createdAt = o.createdAt) !== null && _o$createdAt !== void 0 && _o$createdAt.seconds)) return;\n      const dateStr = new Date(o.createdAt.seconds * 1000).toLocaleDateString();\n      if (!groups[dateStr]) groups[dateStr] = [];\n      groups[dateStr].push(o);\n    });\n    return groups;\n  }, [orders]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), Object.keys(groupedByDate).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No paid orders yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : Object.entries(groupedByDate).map(([date, dayOrders]) => {\n      // Calculate total income\n      let totalIncome = 0;\n      dayOrders.forEach(o => {\n        // --- compute grand total ---\n        let subtotal = o.total || 0;\n        let discount = 0;\n        if (o.discount) {\n          if (o.discount.type === \"percentage\") {\n            discount = subtotal * o.discount.value / 100;\n          } else {\n            discount = o.discount.value;\n          }\n        }\n        if (discount > subtotal) discount = subtotal;\n        const taxable = subtotal - discount;\n        let taxes = 0;\n        (o.taxes || []).forEach(t => {\n          taxes += taxable * t.percentage / 100;\n        });\n        totalIncome += taxable + taxes;\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Orders: \", dayOrders.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Income: \\u20B9\", totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(DailySummaryPage, \"FDo9xCcGGCzv7qPp+8Log3xod4o=\");\n_c = DailySummaryPage;\nvar _c;\n$RefreshReg$(_c, \"DailySummaryPage\");","map":{"version":3,"names":["collection","onSnapshot","useEffect","useMemo","useState","db","jsxDEV","_jsxDEV","DailySummaryPage","_s","orders","setOrders","unsub","snap","docs","map","d","id","data","groupedByDate","groups","filter","o","status","forEach","_o$createdAt","createdAt","seconds","dateStr","Date","toLocaleDateString","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","date","dayOrders","totalIncome","subtotal","total","discount","type","value","taxable","taxes","t","percentage","style","marginTop","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/mahee/Desktop/bunkersbell/cafe-menu/src/pages/DailySummaryPage.js"],"sourcesContent":["// src/pages/DailySummaryPage.js\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { db } from \"../firebase\";\n\nexport default function DailySummaryPage() {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    const unsub = onSnapshot(collection(db, \"orders\"), (snap) => {\n      setOrders(snap.docs.map((d) => ({ id: d.id, ...d.data() })));\n    });\n    return () => unsub();\n  }, []);\n\n  // ✅ Group by date\n  const groupedByDate = useMemo(() => {\n    const groups = {};\n    orders\n      .filter((o) => o.status === \"PaymentDone\") // only paid orders\n      .forEach((o) => {\n        if (!o.createdAt?.seconds) return;\n        const dateStr = new Date(o.createdAt.seconds * 1000).toLocaleDateString();\n\n        if (!groups[dateStr]) groups[dateStr] = [];\n        groups[dateStr].push(o);\n      });\n    return groups;\n  }, [orders]);\n\n  return (\n    <div className=\"card\">\n      <h2>Daily Summary</h2>\n      {Object.keys(groupedByDate).length === 0 ? (\n        <p>No paid orders yet.</p>\n      ) : (\n        Object.entries(groupedByDate).map(([date, dayOrders]) => {\n          // Calculate total income\n          let totalIncome = 0;\n          dayOrders.forEach((o) => {\n            // --- compute grand total ---\n            let subtotal = o.total || 0;\n            let discount = 0;\n            if (o.discount) {\n              if (o.discount.type === \"percentage\") {\n                discount = (subtotal * o.discount.value) / 100;\n              } else {\n                discount = o.discount.value;\n              }\n            }\n            if (discount > subtotal) discount = subtotal;\n            const taxable = subtotal - discount;\n\n            let taxes = 0;\n            (o.taxes || []).forEach((t) => {\n              taxes += (taxable * t.percentage) / 100;\n            });\n\n            totalIncome += taxable + taxes;\n          });\n\n          return (\n            <div key={date} className=\"card\" style={{ marginTop: 12 }}>\n              <h3>{date}</h3>\n              <p>Orders: {dayOrders.length}</p>\n              <p>Total Income: ₹{totalIncome.toFixed(2)}</p>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}