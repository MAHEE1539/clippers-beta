{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahee\\\\Desktop\\\\bunkersbell\\\\cafe-menu\\\\src\\\\pages\\\\DailySummaryPage.js\",\n  _s = $RefreshSig$();\n// src/pages/DailySummaryPage.js\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { db } from \"../firebase\";\n\n// For CSV export\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst downloadCSV = (date, orders) => {\n  let rows = [[\"Customer\", \"Order ID\", \"Grand Total\", \"Created At\"]];\n  orders.forEach(o => {\n    let subtotal = o.total || 0;\n    let discount = 0;\n    if (o.discount) {\n      if (o.discount.type === \"percentage\") {\n        discount = subtotal * o.discount.value / 100;\n      } else {\n        discount = o.discount.value;\n      }\n    }\n    if (discount > subtotal) discount = subtotal;\n    const taxable = subtotal - discount;\n    let taxes = 0;\n    (o.taxes || []).forEach(t => {\n      taxes += taxable * t.percentage / 100;\n    });\n    const grandTotal = taxable + taxes;\n    rows.push([o.customer, o.id, `₹${grandTotal.toFixed(2)}`, new Date(o.createdAt.seconds * 1000).toLocaleString()]);\n  });\n  let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(e => e.join(\",\")).join(\"\\n\");\n  const link = document.createElement(\"a\");\n  link.href = encodeURI(csvContent);\n  link.download = `DailySummary_${date}.csv`;\n  link.click();\n};\n\n// For PDF export\nconst downloadPDF = (date, orders) => {\n  const content = [];\n  content.push(`Daily Summary - ${date}\\n\\n`);\n  orders.forEach(o => {\n    let subtotal = o.total || 0;\n    let discount = 0;\n    if (o.discount) {\n      if (o.discount.type === \"percentage\") {\n        discount = subtotal * o.discount.value / 100;\n      } else {\n        discount = o.discount.value;\n      }\n    }\n    if (discount > subtotal) discount = subtotal;\n    const taxable = subtotal - discount;\n    let taxes = 0;\n    (o.taxes || []).forEach(t => {\n      taxes += taxable * t.percentage / 100;\n    });\n    const grandTotal = taxable + taxes;\n    content.push(`Customer: ${o.customer} | OrderID: ${o.id} | Grand Total: ₹${grandTotal.toFixed(2)} | Created At: ${new Date(o.createdAt.seconds * 1000).toLocaleString()}`);\n  });\n  const blob = new Blob([content.join(\"\\n\")], {\n    type: \"text/plain\"\n  });\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = `DailySummary_${date}.pdf`;\n  link.click();\n};\nexport default function DailySummaryPage() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const unsub = onSnapshot(collection(db, \"orders\"), snap => {\n      setOrders(snap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      })));\n    });\n    return () => unsub();\n  }, []);\n\n  // ✅ Group by date\n  const groupedByDate = useMemo(() => {\n    const groups = {};\n    orders.filter(o => o.status === \"PaymentDone\") // only paid orders\n    .forEach(o => {\n      var _o$createdAt;\n      if (!((_o$createdAt = o.createdAt) !== null && _o$createdAt !== void 0 && _o$createdAt.seconds)) return;\n      const dateStr = new Date(o.createdAt.seconds * 1000).toLocaleDateString();\n      if (!groups[dateStr]) groups[dateStr] = [];\n      groups[dateStr].push(o);\n    });\n\n    // Sort dates descending (latest first)\n    return Object.fromEntries(Object.entries(groups).sort(([a], [b]) => new Date(b) - new Date(a)));\n  }, [orders]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20\n      },\n      children: \"\\uD83D\\uDCCA Daily Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), Object.keys(groupedByDate).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No paid orders yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : Object.entries(groupedByDate).map(([date, dayOrders]) => {\n      // Calculate total income\n      let totalIncome = 0;\n      dayOrders.forEach(o => {\n        let subtotal = o.total || 0;\n        let discount = 0;\n        if (o.discount) {\n          if (o.discount.type === \"percentage\") {\n            discount = subtotal * o.discount.value / 100;\n          } else {\n            discount = o.discount.value;\n          }\n        }\n        if (discount > subtotal) discount = subtotal;\n        const taxable = subtotal - discount;\n        let taxes = 0;\n        (o.taxes || []).forEach(t => {\n          taxes += taxable * t.percentage / 100;\n        });\n        totalIncome += taxable + taxes;\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          marginTop: 16,\n          padding: 16,\n          border: \"1px solid #ddd\",\n          borderRadius: 10,\n          background: \"#fff\",\n          boxShadow: \"0 4px 10px rgba(0,0,0,0.08)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: \"0 0 8px 0\"\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Orders:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), \" \", dayOrders.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), \" \\u20B9\", totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => downloadCSV(date, dayOrders),\n            children: \"Download CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(DailySummaryPage, \"FDo9xCcGGCzv7qPp+8Log3xod4o=\");\n_c = DailySummaryPage;\nvar _c;\n$RefreshReg$(_c, \"DailySummaryPage\");","map":{"version":3,"names":["collection","onSnapshot","useEffect","useMemo","useState","db","jsxDEV","_jsxDEV","downloadCSV","date","orders","rows","forEach","o","subtotal","total","discount","type","value","taxable","taxes","t","percentage","grandTotal","push","customer","id","toFixed","Date","createdAt","seconds","toLocaleString","csvContent","map","e","join","link","document","createElement","href","encodeURI","download","click","downloadPDF","content","blob","Blob","URL","createObjectURL","DailySummaryPage","_s","setOrders","unsub","snap","docs","d","data","groupedByDate","groups","filter","status","_o$createdAt","dateStr","toLocaleDateString","Object","fromEntries","entries","sort","a","b","className","children","style","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","keys","length","dayOrders","totalIncome","marginTop","padding","border","borderRadius","background","boxShadow","margin","display","gap","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mahee/Desktop/bunkersbell/cafe-menu/src/pages/DailySummaryPage.js"],"sourcesContent":["// src/pages/DailySummaryPage.js\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { db } from \"../firebase\";\n\n// For CSV export\nconst downloadCSV = (date, orders) => {\n  let rows = [[\"Customer\", \"Order ID\", \"Grand Total\", \"Created At\"]];\n  orders.forEach((o) => {\n    let subtotal = o.total || 0;\n    let discount = 0;\n    if (o.discount) {\n      if (o.discount.type === \"percentage\") {\n        discount = (subtotal * o.discount.value) / 100;\n      } else {\n        discount = o.discount.value;\n      }\n    }\n    if (discount > subtotal) discount = subtotal;\n    const taxable = subtotal - discount;\n\n    let taxes = 0;\n    (o.taxes || []).forEach((t) => {\n      taxes += (taxable * t.percentage) / 100;\n    });\n\n    const grandTotal = taxable + taxes;\n\n    rows.push([\n      o.customer,\n      o.id,\n      `₹${grandTotal.toFixed(2)}`,\n      new Date(o.createdAt.seconds * 1000).toLocaleString(),\n    ]);\n  });\n\n  let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map((e) => e.join(\",\")).join(\"\\n\");\n  const link = document.createElement(\"a\");\n  link.href = encodeURI(csvContent);\n  link.download = `DailySummary_${date}.csv`;\n  link.click();\n};\n\n// For PDF export\nconst downloadPDF = (date, orders) => {\n  const content = [];\n  content.push(`Daily Summary - ${date}\\n\\n`);\n\n  orders.forEach((o) => {\n    let subtotal = o.total || 0;\n    let discount = 0;\n    if (o.discount) {\n      if (o.discount.type === \"percentage\") {\n        discount = (subtotal * o.discount.value) / 100;\n      } else {\n        discount = o.discount.value;\n      }\n    }\n    if (discount > subtotal) discount = subtotal;\n    const taxable = subtotal - discount;\n\n    let taxes = 0;\n    (o.taxes || []).forEach((t) => {\n      taxes += (taxable * t.percentage) / 100;\n    });\n\n    const grandTotal = taxable + taxes;\n\n    content.push(\n      `Customer: ${o.customer} | OrderID: ${o.id} | Grand Total: ₹${grandTotal.toFixed(\n        2\n      )} | Created At: ${new Date(o.createdAt.seconds * 1000).toLocaleString()}`\n    );\n  });\n\n  const blob = new Blob([content.join(\"\\n\")], { type: \"text/plain\" });\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = `DailySummary_${date}.pdf`;\n  link.click();\n};\n\nexport default function DailySummaryPage() {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    const unsub = onSnapshot(collection(db, \"orders\"), (snap) => {\n      setOrders(snap.docs.map((d) => ({ id: d.id, ...d.data() })));\n    });\n    return () => unsub();\n  }, []);\n\n  // ✅ Group by date\n  const groupedByDate = useMemo(() => {\n    const groups = {};\n    orders\n      .filter((o) => o.status === \"PaymentDone\") // only paid orders\n      .forEach((o) => {\n        if (!o.createdAt?.seconds) return;\n        const dateStr = new Date(o.createdAt.seconds * 1000).toLocaleDateString();\n\n        if (!groups[dateStr]) groups[dateStr] = [];\n        groups[dateStr].push(o);\n      });\n\n    // Sort dates descending (latest first)\n    return Object.fromEntries(\n      Object.entries(groups).sort(\n        ([a], [b]) => new Date(b) - new Date(a)\n      )\n    );\n  }, [orders]);\n\n  return (\n    <div className=\"container\">\n      <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>📊 Daily Summary</h2>\n\n      {Object.keys(groupedByDate).length === 0 ? (\n        <p>No paid orders yet.</p>\n      ) : (\n        Object.entries(groupedByDate).map(([date, dayOrders]) => {\n          // Calculate total income\n          let totalIncome = 0;\n          dayOrders.forEach((o) => {\n            let subtotal = o.total || 0;\n            let discount = 0;\n            if (o.discount) {\n              if (o.discount.type === \"percentage\") {\n                discount = (subtotal * o.discount.value) / 100;\n              } else {\n                discount = o.discount.value;\n              }\n            }\n            if (discount > subtotal) discount = subtotal;\n            const taxable = subtotal - discount;\n\n            let taxes = 0;\n            (o.taxes || []).forEach((t) => {\n              taxes += (taxable * t.percentage) / 100;\n            });\n\n            totalIncome += taxable + taxes;\n          });\n\n          return (\n            <div\n              key={date}\n              className=\"card\"\n              style={{\n                marginTop: 16,\n                padding: 16,\n                border: \"1px solid #ddd\",\n                borderRadius: 10,\n                background: \"#fff\",\n                boxShadow: \"0 4px 10px rgba(0,0,0,0.08)\",\n              }}\n            >\n              <h3 style={{ margin: \"0 0 8px 0\" }}>{date}</h3>\n              <p>\n                <strong>Orders:</strong> {dayOrders.length}\n              </p>\n              <p>\n                <strong>Total Income:</strong> ₹{totalIncome.toFixed(2)}\n              </p>\n\n              <div style={{ display: \"flex\", gap: \"10px\", marginTop: 10 }}>\n                <button className=\"btn\" onClick={() => downloadCSV(date, dayOrders)}>\n                  Download CSV\n                </button>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}